[global]
; If 10 PHP-FPM child processes exit with SIGSEGV or SIGBUS within 1 minute then PHP-FPM restart automatically.
; See: https://www.if-not-true-then-false.com/2011/nginx-and-php-fpm-configuration-and-optimizing-tips-and-tricks/
emergency_restart_threshold = 10
emergency_restart_interval = 1m

; This configuration also sets 10 seconds time limit for child processes to wait for a reaction on signals from master.
process_control_timeout = 10s

error_log = /var/log/nginx/fpm-error.log

[www]
access.log = /var/log/nginx/fpm-access.log

listen = /var/www/pimcore/php-fpm.sock
listen.owner = www-data

; Ping endpoint.
ping.path = /fpm-ping

; Display status fpm status page.
pm.status_path = /fpm-status

; The maximum number of child processes.
; This value sets the limit on the number of simultaneous requests that will be served.
; Appropriate value can be calculated as: Total RAM dedicated to the web server / Max child process size
; Command to determine the average memory usage of currently running child processes:
; $> ps --no-headers -o "rss,cmd" -C php-fpm | awk '{ sum+=$1 } END { printf ("%d%s\n", sum/NR/1024,"M") }'
pm.max_children = 25

; The number of requests each child process should execute before respawning.
pm.max_requests = 250

; Max execution time for the child process. Processes running longer are killed.
request_terminate_timeout = 10m

; If a request is taking longer than 30 sec to process, we want to log it.
;request_slowlog_timeout = 60s
;slowlog = /var/www/pimcore/var/logs/slowlog-site.log
